name: MigTool continuous build
# read more here
# https://help.github.com/en/articles/workflow-syntax-for-github-actions#on
on:
  push:
    branches:
      - '**'
      - '!refs/tags/.*'
    tags-ignore:
      - '**'

jobs:
  build:
    name: Migtool build
    if: "!contains(github.event.head_commit.message, '[ci skip]')"
    runs-on: ubuntu-latest
    timeout-minutes: 90
    strategy:
      fail-fast: false

    steps:
      - name: Environment
        run: env | sort

      - name: Checkout
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Setup Graalvm
        uses: graalvm/setup-graalvm@v1
        with:
          java-version: '17.0.8'
          distribution: 'graalvm'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install native-image component
        run: gu install native-image

      - name: Tests
        run: ./gradlew check

      - name: Tests reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: linux-test-reports
          path: build/reports/tests/test/
          overwrite: true

      - name: Build Native Image
        run: ./gradlew nativeCompile

      - name: Upload linux native image artifact
        uses: actions/upload-artifact@v4
        with:
          name: migtool-linux
          path: build/native/nativeCompile/migtool
          overwrite: true

      - name: Tests native
        run: ./gradlew cleanTest check
        env:
          NATIVE_BINARY_PATH: build/native/nativeCompile/migtool

      - name: TestsNative reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: linux-testsNative-reports
          path: build/reports/tests/nativeCliTest/
          overwrite: true

  release:
    name: Release
    if: "contains(github.event.head_commit.message, '[release]') && github.event.ref=='refs/heads/master'"
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Download all build artifacts
        uses: actions/download-artifact@v4

      - name: Setup Java for JReleaser
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Version
        id: version
        run: |
          VERSION=$(cat ./VERSION)
          echo "VERSION = $VERSION"
          echo "::set-output name=VERSION::$VERSION"

      - name: Run JReleaser
        uses: jreleaser/release-action@v2
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_PROJECT_VERSION: ${{ steps.version.outputs.VERSION }}
